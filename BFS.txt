#include<bits/stdc++.h>
using namespace std;

class Graph{
    int v;
    list<int> *adj;
public:
    Graph(int v);
    void add(int u,int w);
    void BFS(int s);
};

Graph :: Graph(int v){
    this->v = v;
    adj = new list<int>[v];
}

void Graph :: add(int u,int w){
    adj[u].push_back(w);
}

void Graph :: BFS(int s){
    bool *visited = new bool[v];
    for(int i=0;i<v;i++){
        visited[i] = false;
    }
    
    queue<int> q;
    visited[s] = true;
    q.push(s);
    
    
    list<int> :: iterator i;
    while(!q.empty()){
        s = q.front();
        cout<<s<<" ";
        q.pop();
        
    for(i=adj[s].begin();i != adj[s].end();++i){
        if(!visited[*i]){
            visited[*i] = true;
            q.push(*i);
        }
    }
    }
}

int main(){
    Graph g(4);
    g.add(0,1);
    g.add(0,2);
    g.add(1,2);
    g.add(2,0);
    g.add(2,3);
    g.add(3,3);
    
    g.BFS(2);
    return 0;
}