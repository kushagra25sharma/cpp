#include <bits/stdc++.h>
using namespace std;
#define ll long long
const int mod = 1e9 + 7;
long long modAdd(long long a, long long b){
  return (a%mod + b%mod + 2*mod)%mod;
}
int main(){
    ios_base :: sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int n,m;
    cin>>n>>m;
    vector<ll> a[n+1],v[n+1],h[n+1],d[n+1],ans[n+1];
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            char c;
            cin>>c;
            v[i].push_back(0);
            h[i].push_back(0);
            d[i].push_back(0);
            ans[i].push_back(0);
            if(c == '#'){
               a[i].push_back(1);
            }
            else{
                a[i].push_back(0);
            }
        }
    }
    ans[0][0] = h[0][0] = v[0][0] = d[0][0] = 1;
    a[0][0] =1;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(a[i][j]){
                continue;
            }
            if(i-1 >= 0){
                ans[i][j] = modAdd(ans[i][j], v[i-1][j]);
                v[i][j] = v[i-1][j]%mod;
            }
            if(j-1 >= 0){
                ans[i][j] = modAdd(ans[i][j], h[i][j-1]);
                h[i][j] = h[i][j-1]%mod;
            }
            if(i-1 >= 0 && j-1 >= 0){
                ans[i][j] = modAdd(ans[i][j], d[i-1][j-1]);
                d[i][j] = d[i-1][j-1]%mod;
            }
            v[i][j] = modAdd(ans[i][j], v[i][j]);
            h[i][j] = modAdd(ans[i][j], h[i][j]);
            d[i][j] = modAdd(ans[i][j], d[i][j]);
        }
    }
    cout<<ans[n-1][m-1];
    return 0;
}